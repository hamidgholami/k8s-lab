---
- hosts: kuberlab
  gather_facts: false
  become: yes
  vars:
    #provision_path: provisioning/files
  pre_tasks:
    - name: "Wait for all nodes to be ready"
      wait_for_connection:
        delay: 20
        timeout: 300
    
    - name: "Wait for all ssh services to be ready"
      wait_for:
        host: "{{ (ansible_ssh_host|default(ansible_host))|default(inventory_hostname) }}"
        port: 22
        delay: 5
        timeout: 300
        msg: "SSH Services are not ready..."
      ignore_errors: true
  
  tasks:
    - name: Disable SELinux
      ansible.posix.selinux:
        state: disabled
    
    # - name: reboot after change SELinux
    #   block:
    #     - name: shutdown -r now
    #       ansible.builtin.shell: sleep 5 && shutdown -r now
    #       async: 0
    #       poll: 0
    #       ignore_errors: true

    #     - name: Wait for Reboot Machines
    #       pause:
    #         minutes: 1

    #     - name: wait for reboot
    #       wait_for_connection:
    #         delay: 60
    #         timeout: 300

    # - name: Wait for Reboot Machines
    #   pause:
    #     minutes: 1

    - name: Copy k3s binary file
      changed_when: false
      copy:
        src: "k3s"
        dest: "/usr/local/bin/"
        mode: '0755'

    - name: Disable Original Repos
      ansible.builtin.shell: cd /etc/yum.repos.d/ && for i in * ; do mv $i $i.disabled ; done
      args:
        executable: /bin/bash
        warn: false
    
    - name: Copy local repository
      changed_when: false
      copy:
        src: "lanArtifactory.repo"
        dest: /etc/yum.repos.d/
    
    - name: Create Directories /etc/rancher/k3s/ and /appserver/rancher/k3s
      changed_when: false
      file:
        path: "{{ item }}"
        state: directory
        recurse: yes
      loop:
        - '/etc/rancher/k3s'
        - '/appserver/rancher/k3s'
    
    - name: Copy registries.yaml
      changed_when: false
      copy:
        src: "registries.yaml"
        dest: "/etc/rancher/k3s/"

    - name: Copy files k3s-master.service
      changed_when: false
      ansible.builtin.template:
        src: "files/k3s-master.service.j2"
        dest: /etc/systemd/system/k3s-master.service
      when: inventory_hostname == groups['kuberlab'][0]

    - name: Start & Enable k3s-master.service
      systemd:
        name: k3s-master.service
        state: started
        enabled: yes
        daemon-reload: yes
      when: inventory_hostname == groups['kuberlab'][0]

    - name: "Wait for Master..."
      wait_for_connection:
        delay: 120
    
    - name: Wait for port 6443 of master node
      wait_for:
        host: "{{ hostvars['master'].ansible_host }}"
        port: 6443
        delay: 60
        state: started
        timeout: 300
        msg: "Master is not ready..."
      ignore_errors: true
   
    - name: Read /appserver/rancher/k3s/server/token
      command: cat /appserver/rancher/k3s/server/token
      register: master_token
      when: inventory_hostname == groups['kuberlab'][0]

    - name: Copy files k3s-worker.service
      changed_when: false
      ansible.builtin.template:
        src: "files/k3s-worker.service.j2"
        dest: /etc/systemd/system/k3s-worker.service
      when: inventory_hostname != groups['kuberlab'][0]

    - name: Start & Enable k3s-worker.service
      systemd:
        name: k3s-worker.service
        state: started
        enabled: yes
        daemon-reload: yes
      when: inventory_hostname != groups['kuberlab'][0]

    - name: Add DNS SERVER
      community.general.nmcli:
        conn_name: "System eth1"
        type: ethernet
        dns4:
        - 10.100.1.181
        - 10.100.0.181
        state: present
      notify:
      - restart network

    - name: "Wait for Cluster..."
      wait_for_connection:
        delay: 120
  
    - name: Get your Kubernetes Cluster information
      ansible.builtin.shell: echo "kubectl get nodes" && /usr/local/bin/k3s kubectl get node && echo "kubectl get namespaces" && /usr/local/bin/k3s kubectl get ns
      args:
        executable: /bin/bash
        warn: false
      register: get_node
      when: inventory_hostname == groups['kuberlab'][0]
    
    - name: Disply "kubectl get nodes" output
      ansible.builtin.debug:
        msg: "{{ get_node.stdout_lines }}"
        #var: get_node
        #verbosity: 6
      when: inventory_hostname == groups['kuberlab'][0]

  handlers:
    - name: restart network
      service:
        name: NetworkManager
        state: restarted